<!DOCTYPE html>
<html>
    <script src="stream.js"></script>
<body>

<p>Count numbers: <output id="result"></output></p>
<p>Threads: <output id="ids"></output></p>

<button onclick="startWorker()">Start streaming</button>
<label>Filename:</label> 
<input type="text" id="startFilename" name="startFilename" required minlength="4" maxlength="40" size="40" />
<br/>
<button onclick="stopWorker()">Stop streaming</button>
<label>Stop thread ID:</label>
<input type="text" id="stopThreadId" name="stopThreadId" required minlength="4" maxlength="40" size="40" />

<script>
var threads = new Map();
var counterLabels = new Map();
var str;

function startWorker() {
    var newThread;
  if(typeof(Worker) !== "undefined") {
        var id = uuidv4();
        let startFilename = document.getElementById('startFilename').value;
        newThread = new Worker("stream.js");
        newThread.postMessage({
            command: "stream",
            filename: `${startFilename}.bin`,
            idValue: id.slice(0, 4)
        });
        threads.set(id.slice(0, 4), newThread);
        var str;
        threads.forEach((value, key) => {str+=`  ${key} `;});
        document.getElementById("ids").innerHTML = str;

        br = document.createElement('br');
        document.body.appendChild(br);
        newLabel = document.createElement('label');
        newLabel.textContent = '';
        document.body.appendChild(newLabel);
        counterLabels.set(id.slice(0, 4), newLabel);

        newThread.onmessage = function(event) {
            var counts = document.getElementById("result").innerHTML;
            document.getElementById("result").innerHTML = `${event.data.idValue} ${event.data.value}`;
            var label = counterLabels.get(event.data.idValue);
            if(label !=null)
            {
                label.textContent = `${event.data.idValue} ${event.data.value}`;
            }
        };
  } else {
    document.getElementById("result").innerHTML = "Web workers not supported.";
  }
}

function stopWorker() { 
    let theText = document.getElementById('stopThreadId').value;
    var threadToEnd = threads.get(theText.slice(0, 4));
    if(threadToEnd !=null)
    {
        console.log(`Ending ${theText}`);
        threadToEnd.terminate();
        threadToEnd = undefined;
        threads.delete(threadToEnd);
    }
    else{
        console.log(`Cannot find thread ${theText}`);
    }
    var label = counterLabels.get(theText.slice(0, 4));
    if(label !=null)
    {
        document.body.removeChild(label);
    }
}

function uuidv4() {
  return "10000000-1000-4000-8000-100000000000".replace(/[018]/g, c =>
    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
  );
}
</script>

</body>
</html>